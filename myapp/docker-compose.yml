version: '3.8'

services:
  db:
    image: docker.io/library/postgres:14-alpine
    restart: always
    environment:
      POSTGRES_DB: your_db_name
      POSTGRES_USER: your_db_user
      POSTGRES_PASSWORD: your_db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "your_db_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./appback
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./appback:/app/backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://your_db_user:your_db_password@db:5432/your_db_name
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build: ./my-app
    command: npm run dev
    volumes:
      - ./my-app:/app/frontend
      - /app/frontend/node_modules
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/api/
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
